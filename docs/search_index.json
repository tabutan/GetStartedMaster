[["index.html", "修士のススメ 0 はじめに", " 修士のススメ tabutan 2025-04-27 0 はじめに ヤクシマザルに関する知見についてまとめた。まとめるにあたり、人類進化論研究室のウェブページ、「屋久島の野生二ホンザル」を参考に構成しました。本サイトで使用したRコードはGitHubで閲覧できます。 ヤクシマザルの研究は1952年に川村俊蔵と伊谷純一郎により最初の調査が行われました。その後1976年に丸橋珠樹が、屋久島西部地域で餌付けに頼らずサルにヒトの存在を慣れさせる「人付け」を行い、サルと一緒に遊動して観察できるようにしました(Yamagiwa 2008)。それ以来、多くの調査が行われ、現在も継続して行われ、ヤクシマザルの知見が蓄積されてきました。 そこで本稿はニホンザルのことを紹介しつつ、その亜種であるヤクシマザルのことを知ることを目的としています。そのため、まずニホンザル一般の話から始め、それと対比しつつヤクシマザルの特徴について紹介することを基本スタイルとします。 さらに文献を調べて知識を深めたい人向けに、キーワードとなる専門用語については英語を括弧で書きました。文章の肩に振ってある数字は文末の引用文献番号と対応しています。 ニホンザル ニホンザルは青森県から鹿児島県本土までに生息しているホンドザル（学名：Macaca fuscata fuscata）と屋久島に生息しているヤクシマザル（学名：Macaca fuscata yakui）の2亜種に分けられる。 ¡注意! この文章は筆者がヤクシマザルを中心にニホンザルについてまとめたものですが、第三者による査読を受けていません。筆者は情報について正確に書くように努めていますが、間違いがある可能性もあるのでご注意ください。引用する場合は、各自責任をもって原典に当たって確認してください。 引用文献 "],["rmarkdownの練習.html", "1 Rmarkdownの練習 1.1 デスクトップにフォルダーを作る 1.2 RでProjectを立ち上げる 1.3 Bookdownの再現 1.4 新しいRmarkdownファイルを作成 1.5 章立てをする 1.6 文章を書く 1.7 引用文献スタイルを変更する 1.8 Rコードを書く", " 1 Rmarkdownの練習 Rmarkdownを使うにあたって、実用性が高い書きかたを紹介する。 1.1 デスクトップにフォルダーを作る マイクロソフトなどのクラウドと同期されていると、Rの挙動に予期せぬバグが生じることがある。まずは同期されていないことを確認し、されている場合は、切断しよう。 Desktopに新しく「R files」フォルダーを作成し、その後R Studioを立ち上げる。 1.2 RでProjectを立ち上げる 右上にあるProject:(None)をクリックし、一番上のNew Projectをクリック、 New Directory &gt; New Project と進み、Directory nameにすきな名前をつける。日本語にするとバグが起こることがあるので、アルファベットが無難。 Create project as subdirectory of: のところに 「C:/Users/〇〇〇/Desktop/R files」と表示されればOK（〇〇〇はPCの名前であり、人それぞれ）。 されていない場合は、BrowseボタンからR filesを指定する。 1.3 Bookdownの再現 1.3.1 練習ファイルのダウンロード GitHubにある修士のススメにある「練習用ファイル一覧」フォルダーをダウンロード。 R Projectと同じレイヤーにファイルを置く。図 1.1のようになっていたらOK。 「xxx」はプロジェクト名なので、人それぞれ命名したものになる。 図1.1: ダウンロードしたファイルの置き場はR Projectと同じレイヤーにする Knitしてみると、本サイトの「0 はじめに」と同じものが表示されるはずである。 ここで表示されている内容は「ヤクシマザルという生き物を知りたい」にあるものと同じものです。 1.3.2 言語設定をUTF-８にする 言語設定によっては日本語がバグの原因となり、日本語の部分が後で何を書いたのかわからなくなる。 必ずUTF-8にすること。UTF-8で指定しないとコードの日本語がすべて文字化けしてしまう(T_T) 設定方法は、一番上にFile Edit View・・・と並んでいるところのToolsを選択し、 Tools &gt; Global Options &gt; Code &gt; Saving と進み、真ん中にあるDefault text encoddingでUTF-8を指定。 Applyをクリックし、OKをクリックして閉じる。 1.3.3 Build Bookしてみよう 一応KnitでもHTMLが出現したと思うが、GitBookの場合はエラーの元（例えば、ある章を閲覧できないなど）。Q &amp; AにあるGitBookの立ち上げ方を読み、Build Bookしてみよう。 1.4 新しいRmarkdownファイルを作成 左上にある緑の背景に白の十字のアイコンをクリック、Rmarkdownを選択。 すべてデフォルトのままOKをクリック。 新しく作ったRmarkdownファイルをセーブして、名前を付ける。 その後、一旦そのファイル内の記述をすべて削除して、何か好きなことを書いてみる。 その後、_bookdown.ymlを開き、その中に「rmd_files:」が以下のようになっているはず。 rmd_files:     - index.Rmd     - sessioninfo.Rmd このリストの中に自分で作ったRmarkdownファイルの名前を入れよう。 rmd_files:     - index.Rmd     - xyzw.Rmd     - sessioninfo.Rmd Build Bookすると自分のRmarkdownの内容が反映されているはず。 1.5 章立てをする #の数だけ階層を変えられる。#の後に半角スペースを入れることを忘れずに。 # 章 ## 節 ### 項 #### 次 1.5.1 わっしょい 1.5.1.1 ほいさほいさ 1.6 文章を書く 文章を書く際に、ワードのようにできない。Markdownの記法で表現する必要がある。ここではよく使うものを練習してみよう。 1.6.1 太字、イタリック 文章はそのまま書けばOK。 太字は、太字にしたい部分を__または**で囲めばOK。 **ぽよよん** __ぽよよん__ ぽよよん ぽよよん イタリックは_または*で囲む。 *italic*、_italic_、*字体によってイタリックに見えないものあり！* 霊長類の雑誌は、 *Primates* *International Journal of Primatology* *American Journal of Primatology* *Folia Primatologica* の４つ。 italic、italic、字体によってイタリックに見えないものあり！ 霊長類の雑誌は、 Primates International Journal of Primatology American Journal of Primatology Folia Primatologica の４つ。 1.6.2 箇条書き 半角でマイナス記号、半角スペース 箇条書きの中の箇条書き：tabキー押して、半角でマイナス記号、半角スペース - 箇条書き     - 修士向け     - 知らなくても大丈夫     - のんびりできないし     - すんなりいかない     - スケジュール     - 目指せRマスター 箇条書き 修士向け 知らなくても大丈夫 のんびりできないし すんなりいかない スケジュール 目指せRマスター 数字でもできる。 - 箇条書き     1. 修士向け     1. 知らなくても大丈夫     1. のんびりできないし     1. すんなりいかない     1. スケジュール     1. 目指せRマスター 箇条書き 修士向け 知らなくても大丈夫 のんびりできないし すんなりいかない スケジュール 目指せRマスター 1.6.3 数式 文章中の数式は$で囲む。 個体追跡法でアカンボウを行動観察した（$N=12$、$n=225$）。 個体追跡法でアカンボウを行動観察した（\\(N=12\\)、\\(n=225\\)）。 1.6.3.1 下付き文字、上付き文字 $で囲んで、下付きにしたい文字をアンダーバーと{}で括る。1文字なら{}は省略可。上付き文字はアンダーバーの代わりに^を使う。 $N_a$、$N^a$、$N_{修士のススメ参加者}=7$ \\(N_a\\)、\\(N^a\\)、\\(N_{修士のススメ参加者}=7\\) 1.6.4 コメントアウト 隠したい文章は、「&lt;!-- 〇〇 --&gt;」でコメントアウトできる。 ショートカットキーは、「ctrl + shift + C」。 &lt;!– 見られたくない、見られたくない --&gt;、無事消えたかな？ 、無事消えたかな？ 1.6.5 引用文献 ヤクシマザルは他地域のニホンザルより体毛が黒い [@hamada1992] @hamada1992 はヤクシマザルは他地域のニホンザルより体毛が黒いことを明らかにした。 ヤクシマザルは他地域のニホンザルより体毛が黒い (濱田 et al. 1992) 濱田 et al. (1992) はヤクシマザルは他地域のニホンザルより体毛が黒いことを明らかにした。 ニホンザルの研究はいろいろある [@hamada1992; @hikida2022] ニホンザルの研究はいろいろある (濱田 et al. 1992; Hikida 2022) 1.6.5.1 よくある引用トラブル1 1.1. タイトルで大文字にしたいところが小文字に 1.2. タイトルで書いている種名がイタリックになっていない Hikida 2022の引用文献を例に見てみよう。 Japanese macaquesにすべきところをjapanese macaquesと表示されているし、種名がイタリックになっていない！ 対処法 bibファイルの中でHikida 2022に該当する箇所を探す。 @article{hikida2022, author = {Hikida, K.}, title = {Eyeblink rate as an indicator of concentration on grooming in Japanese macaques (Macaca fuscata)}, journal = {American Journal of Primatology}, volume = {84}, number = {7}, pages = {e23392}, title = {xxxxxxx}になっているところをtitle ={{xxxxx}}に変更してみよう。小文字が正しく大文字に変更されているはず。 次に、イタリック。 イタリックにしたい箇所であるMacaca fuscataを\\textit{Macaca fuscata}というように書いてみよう。種名がイタリックになっているはず。 HP上は￥のマークになっているが、Ｒコード上はバックスラッシュであることに注意。 1.6.5.2 よくある引用トラブル2 引用する論文のタイトルに数学的記号があると、大抵の論文管理ソフトや論文検索ソフトではタイトル通りに表示されない。この場合、数学的記号を文中で表示させる記法である$で囲う方法で解決する。 例えば、Vehtari et al. (2021) を見てみよう。 \\(\\hat{R}\\)と表示したいにもかかわらず、R＾と表示されてしまっている。 @article{vehtari2021, author = {Vehtari, Aki and Gelman, Andrew and Simpson, Daniel and Carpenter, Bob and Bürkner, Paul-Christian}, title = {Rank-Normalization, Folding, and Localization: An Improved Rˆ for Assessing Convergence of MCMC (with Discussion)}, この場合、titleの中の「Rˆ」を「$\\hat{R}」とすると\\(\\hat{R}\\)と正しく表示される。 1.7 引用文献スタイルを変更する 論文投稿するとなったとき、手作業だと困ることは引用文献スタイルの設定である。 例えば、 APAスタイル MLAスタイル シカゴスタイル バンク―バスタイル がある。これらは、引用する論文の書誌情報の書きかたや順番がビッミョーーーーーにちがう！手作業ではやってられない！ 具体的に見てみると、APAだと Hikida, K. (2022). Eyeblink rate as an indicator of concentration on grooming in Japanese macaques (Macaca fuscata). American Journal of Primatology, 84(7), e23392. であるが、MLAだと Hikida, Kenichiro. “Eyeblink rate as an indicator of concentration on grooming in Japanese macaques (Macaca fuscata).” American Journal of Primatology 84.7 (2022): e23392. となる。以下に直すのが面倒臭いかがわかるだろう。 そこで役に立つのが、Zotero Style Repository。 ここのサイトでは、投稿先の引用文献スタイルを書くためのcslファイルが登録されている。 例えば、Science誌、Proceedings of the Royal Society B誌、American Journal of Primatology誌を検索してダウンロードし、R Projectと同じレイヤーに置いてみよう。 index.Rmdを表示し、一番上の---で囲っている中にcslと書いてある箇所があるはず。そこで、さきほどダウンロードした３つの学術雑誌のcslファイル名を一つずつ順番に変えて、Build Bookしてみよう。学術雑誌に合わせた引用のされ方と引用文献リストが瞬時に変更されているはずだ。 1.8 Rコードを書く 「ctrl + alt + I」のショートカットキーを使うと、Rコードを入力するための灰色の領域が表示される。 Rに内蔵されているmpgデータを使って図示できただろうか（図 1.2）。 # パッケージの読み込み library(tidyverse) # 図示 ## Rに内蔵されているmpgデータを使って図示 ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() 図1.2: mpgデータの図示 引用文献 "],["図示化の練習.html", "2 図示化の練習 2.1 第２章の練習 2.2 第３章の練習 2.3 第４章の練習", " 2 図示化の練習 ネットで公開されているData Visualizationを参考に、Rのggplotを用いた図示化をやってみよう。邦訳本は『データ分析のためのデータ可視化入門』。 序文、第1章には、なぜ図示化する必要があるのか、図示化する際の注意点が丁寧に書かれているので、読むとよい。 図示化するにあたって Data Visualizationの序文に書いてある図示する際に必要となるパッケージをダウンロードしよう。 2.1 第２章の練習 2.1.1 csvファイルの読込み・保存 ＠第２章 csvファイルとは、カンマ区切りで情報が整理されたファイルのことで、見た目はExcelファイルに近い。 第２章に書かれているcsvファイルを保存してみましょう。 まず、csvという名前でR Projectと同じレイヤーでフォルダーを作成してください。 # パッケージの読込み library(tidyverse) library(here) # 公開されている臓器提供に関するcsvファイルをダウンロード ## ダウンロードしたcsvに名前を付ける url &lt;- &quot;https://cdn.rawgit.com/kjhealy/viz-organdata/master/organdonation.csv&quot; # csvファイルの読込み ## 「&lt;-」のショートカットは「alt + -」 df_donor &lt;- read_csv(url) # csvファイルとして保存 ## 書きかた１ write_csv(df_donor, here(&quot;csv&quot;, &quot;donor.csv&quot;)) ## 書きかた２ ### スラッシュはフォルダーレイヤーを表す。 ### この場合、csvフォルダーの中にdonor.csvを作るように指示 write_csv(df_donor, &quot;csv/donor.csv&quot;) gampminderの読込みがうまくできない場合、R Studioの左下パネルにあるConsoleで install.packages(“gapminder”) と入力してから読み込む。 library(gapminder) # view関数は無記名の確認したいデータ内容を表示できる view(gapminder) gapminderは各国の平均寿命やGDP、人口のデータが格納されている。 2.1.2 早速図示してみよう！ # 「data = 」は省略可 ggplot(gapminder, # 「mapping = 」も省略可 aes(x = gdpPercap, y = lifeExp)) + geom_point() これがデフォルトでの表示。データの傾向を見るだけならば悪くない。 2.2 第３章の練習 散布図の上に、散布図に基づいた曲線を当てはめてみよう。 # 「data = 」は省略可 ggplot(gapminder, # 「mapping = 」も省略可 aes(x = gdpPercap, y = lifeExp)) + geom_point() + # gam: Generalized Additive Model (GAM)、一般化加法モデル geom_smooth(method = &quot;gam&quot;) 散布図と曲線を表示できた。GAMの詳細はとりあえずわからなくて大丈夫。 次にGDPに対数を取って表示してみよう。 # 「data = 」は省略可 ggplot(gapminder, # 「mapping = 」も省略可 aes(x = gdpPercap, y = lifeExp)) + geom_point() + # lm: Linear Model (LM)、線形モデル geom_smooth(method = &quot;lm&quot;) + scale_x_log10() いい感じ。LMの詳細は分からなくて大丈夫。 図を整形してみよう。 まずは散布図と回帰直線。そして、軸タイトル。 ggplot(gapminder, # 「mapping = 」も省略可 aes(x = gdpPercap, y = lifeExp)) + geom_point(alpha = 1.5, # 色の濃度指定 color = &quot;deepskyblue&quot;, # 色指定 shape = 4) + # 散布図の記号指定 geom_smooth(method = &quot;lm&quot;, # lm: Linear Model (LM)、線形モデル fill = &quot;lightblue&quot;, # 95%信用区間の色指定 color = &quot;deepskyblue&quot;, # 回帰直線の色指定 alpha = 0.7, size = 0.5) + # 記号のサイズ指定 scale_x_log10(labels = scales::dollar) + # ドル表示に変更 labs(x = &quot;一人当たりの国内総生産&quot;, y = &quot;平均寿命&quot;) ggpubr（じーじーぱぶあーる）パッケージをダウンロード、読込み、論文形式の図に整形しよう。 library(ggpubr) # 論文掲載用に設計されたパッケージ ggplot(gapminder, # 「mapping = 」も省略可 aes(x = gdpPercap, y = lifeExp)) + geom_point(alpha = 1.5, # 色の濃度指定 color = &quot;deepskyblue&quot;, # 色指定 shape = 4) + # 散布図の記号指定 geom_smooth(method = &quot;lm&quot;, # lm: Linear Model (LM)、線形モデル fill = &quot;lightblue&quot;, # 95%信用区間の色指定 color = &quot;deepskyblue&quot;, # 回帰直線の色指定 alpha = 0.7, size = 0.5) + # 記号のサイズ指定 scale_x_log10(labels = scales::dollar) + # ドル表示に変更 theme_pubr() + # 無地背景に指定 labs_pubr() + # 軸タイトルのフォントとサイズを指定 labs(x = &quot;一人当たりの国内総生産&quot;, y = &quot;平均寿命&quot;) 結構、論文形式ぽくなった。個人的には、補助線が欲しいので、theme_pubr()からtheme_bw()に変更する。 ggplot(gapminder, # 「mapping = 」も省略可 aes(x = gdpPercap, y = lifeExp)) + geom_point(alpha = 1.5, # 色の濃度指定 color = &quot;deepskyblue&quot;, # 色指定 shape = 4) + # 散布図の記号指定 geom_smooth(method = &quot;lm&quot;, # lm: Linear Model (LM)、線形モデル fill = &quot;lightblue&quot;, # 95%信用区間の色指定 color = &quot;deepskyblue&quot;, # 回帰直線の色指定 alpha = 0.7, size = 0.5) + # 記号のサイズ指定 scale_x_log10(labels = scales::dollar) + # ドル表示に変更 theme_bw() + # 白地罫線に指定 labs_pubr() + # 軸タイトルのフォントとサイズを指定 labs(x = &quot;一人当たりの国内総生産&quot;, y = &quot;平均寿命&quot;) 2.2.1 グループ分けして図示 2.2.1.1 離散値 実はこれまでの図は、ちがうデータを一色淡にして表示していた。これを大陸ごとに分けて表示するとどうなるだろう。 ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, color = continent, fill = continent)) + geom_point() + geom_smooth(method = &quot;loess&quot;) + scale_x_log10(labels = scales::dollar) + # ドル表示に変更 theme_bw() + # 白地罫線に指定 labs_pubr() + # 軸タイトルのフォントとサイズを指定 labs(x = &quot;一人当たりの国内総生産&quot;, y = &quot;平均寿命&quot;) これに全体のデータに対する回帰曲線も描ける。 ポイントは、aes()をggplot()の中から、個別具体的に指示しているgeom_xx()の中に入れてあげること。図示される順番は先にコードされたものが下、後のものが上に描かれる。 ggplot(gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point(aes(color = continent, fill = continent)) + geom_smooth(method = &quot;loess&quot;, aes(color = continent, fill = continent)) + geom_smooth(method = &quot;loess&quot;, color = &quot;black&quot;, fill = &quot;grey30&quot;) + scale_x_log10(labels = scales::dollar) + # ドル表示に変更 theme_bw() + # 白地罫線に指定 labs_pubr() + # 軸タイトルのフォントとサイズを指定 labs(x = &quot;一人当たりの国内総生産&quot;, y = &quot;平均寿命&quot;) 2.2.1.2 連続値 連続値でも色分けして表示できる。 ggplot(gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point(mapping = aes(color = log(pop))) + scale_x_log10(labels = scales::dollar) + theme_bw() + # 白地罫線に指定 labs_pubr() + # 軸タイトルのフォントとサイズを指定 labs(x = &quot;一人当たりの国内総生産&quot;, y = &quot;平均寿命&quot;) 2.3 第４章の練習 "],["q-a.html", "3 Q &amp; A 3.1 Bookdown作成に失敗した 3.2 デフォルトの右上のペインにBuildが出てこない", " 3 Q &amp; A 3.1 Bookdown作成に失敗した File primate.csl not found in resource path エラー: pandoc document conversion failed with error 99 Please delete 修士のススメ.Rmd after you finish debugging the error. 実行が停止されました 何のエラーなのかを確認し、修正したのち、Rmdを削除する。 この場合、cslファイルが見つからないとあるので、プロジェクト内のcslファイルの名前を確認、修正し、修士のススメ.Rmdを削除する。 3.2 デフォルトの右上のペインにBuildが出てこない 上にあるFile, Edit, Codeなどが並んでいるところで Build &gt; Configure Build Tools の順に進む Project Optionsが出てきたら、 Project build toolsでWebsiteを選択、 Book output formats(s)でbook::gitbookを選択しOK。 R Projectをいったん別のものに変更し、元のプロジェクトに戻ると右上ペインにBuildが出現する。 以後Buildするときは Win + Shift + BでBuild Bookする。 このgitbbokはひとつのプロジェクトに一つしか作れないぽい。そのため、レビューとかを作りたいときに使えるかも。 "],["付録.html", "4 付録 4.1 RMarkdownの見ため変更", " 4 付録 4.1 RMarkdownの見ため変更 4.1.1 デフォルト デフォルトのRmarkdownをKnitすると以下の図と同じものが再現されるはずである (図 4.1)。 図4.1: RMarkdownのデフォルト GitBookは１つのプロジェクトで1つだけしか作成できず、GitBookがある状況で、別のRmarkdownをKnitできない。そのため、もし複数のRmarkdownをKnitしたい場合は、GitBookを消す必要がある。 4.1.2 オプション１ index.Rmdの一番上にある各種設定のoutputを以下の図 4.2と同じになるように注意深く書いてみよう。 図4.2: outputの入力：RMarkdownのオプション1 そうすると、デフォルトのRmarkdownが次のような見た目にKnitできるはずだ（図 4.3)。 図4.3: RMarkdownのオプション1 見た目がかっこいい。PDFに直さない限りこれで大丈夫。PDFに変換しようとすると見た目が汚くなる。うまくやれる方法があるかもしれないが、わからない（泣） 4.1.3 オプション２ そこでシンプルな見た目だが、PDFでも見やすいRMarkdownを紹介する。 outputを図 4.4のように変更してみよう。 図4.4: outputの入力：RMarkdownのオプション2 そうすると、以下の図 4.5と同じRMarkdownができる。 図4.5: outputの入力：RMarkdownのオプション2 これは安心してPDFにできる。iPadにPDFを入れておけば、通学中、PCを開くことなく、オフライン状況下でも心おきなく見返せる。レビューとデータ解析を別々のRMarkdownで出力することもできる。 RMarkdownのオプションは本当に多いが、これが今のところ知っている中で、シンプルかつ便利なものである。 "],["実行環境.html", "実行環境", " 実行環境 sessionInfo() ## R version 4.3.3 (2024-02-29 ucrt) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 11 x64 (build 26100) ## ## Matrix products: default ## ## ## locale: ## [1] LC_COLLATE=Japanese_Japan.utf8 LC_CTYPE=Japanese_Japan.utf8 ## [3] LC_MONETARY=Japanese_Japan.utf8 LC_NUMERIC=C ## [5] LC_TIME=Japanese_Japan.utf8 ## ## time zone: Asia/Tokyo ## tzcode source: internal ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggpubr_0.6.0 gapminder_1.0.0 here_1.0.1 lubridate_1.9.2 ## [5] forcats_1.0.0 stringr_1.5.1 dplyr_1.1.4 purrr_1.0.2 ## [9] readr_2.1.4 tidyr_1.3.1 tibble_3.2.1 ggplot2_3.5.1 ## [13] tidyverse_2.0.0 ## ## loaded via a namespace (and not attached): ## [1] sass_0.4.9 utf8_1.2.4 generics_0.1.3 rstatix_0.7.2 ## [5] stringi_1.8.4 hms_1.1.3 digest_0.6.37 magrittr_2.0.3 ## [9] evaluate_0.24.0 grid_4.3.3 timechange_0.2.0 bookdown_0.35 ## [13] fastmap_1.2.0 rprojroot_2.0.3 jsonlite_1.8.8 backports_1.5.0 ## [17] fansi_1.0.6 scales_1.3.0 codetools_0.2-19 jquerylib_0.1.4 ## [21] abind_1.4-8 cli_3.6.3 rlang_1.1.4 munsell_0.5.1 ## [25] withr_3.0.1 cachem_1.1.0 yaml_2.3.10 tools_4.3.3 ## [29] tzdb_0.4.0 ggsignif_0.6.4 colorspace_2.1-1 broom_1.0.5 ## [33] vctrs_0.6.5 R6_2.5.1 lifecycle_1.0.4 car_3.1-2 ## [37] pkgconfig_2.0.3 pillar_1.9.0 bslib_0.8.0 gtable_0.3.5 ## [41] glue_1.7.0 highr_0.11 xfun_0.47 tidyselect_1.2.1 ## [45] rstudioapi_0.15.0 knitr_1.48 farver_2.1.2 htmltools_0.5.8.1 ## [49] labeling_0.4.3 carData_3.0-5 rmarkdown_2.28 compiler_4.3.3 "],["引用文献-1.html", "引用文献", " 引用文献 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
